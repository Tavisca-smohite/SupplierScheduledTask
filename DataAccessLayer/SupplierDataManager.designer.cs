#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccessLayer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dLogging")]
	public partial class SupplierDataManagerDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    #endregion
		
		public SupplierDataManagerDataContext() : 
				base(global::DataAccessLayer.Properties.Settings.Default.dLoggingConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SupplierDataManagerDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SupplierDataManagerDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SupplierDataManagerDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SupplierDataManagerDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spGetLogBasedOnCallType2")]
		public ISingleResult<spGetLogBasedOnCallType2Result> spGetLogBasedOnCallType2([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CallType", DbType="NVarChar(32)")] string callType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SupplierId", DbType="Int")] System.Nullable<int> supplierId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TimeDiff", DbType="Int")] System.Nullable<int> timeDiff, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SupplierName", DbType="NVarChar(64)")] string supplierName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), callType, supplierId, timeDiff, supplierName);
			return ((ISingleResult<spGetLogBasedOnCallType2Result>)(result.ReturnValue));
		}
	}
	
	public partial class spGetLogBasedOnCallType2Result
	{
		
		private string _ProviderId;
		
		private string _Supplier;
		
		private string _CallType;
		
		private string _Success;
		
		private string _Failure;
		
		private string _PerSuccess;
		
		private string _PerFailure;
		
		public spGetLogBasedOnCallType2Result()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderId", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string ProviderId
		{
			get
			{
				return this._ProviderId;
			}
			set
			{
				if ((this._ProviderId != value))
				{
					this._ProviderId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Supplier", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					this._Supplier = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallType", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string CallType
		{
			get
			{
				return this._CallType;
			}
			set
			{
				if ((this._CallType != value))
				{
					this._CallType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Success", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Success
		{
			get
			{
				return this._Success;
			}
			set
			{
				if ((this._Success != value))
				{
					this._Success = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Failure", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Failure
		{
			get
			{
				return this._Failure;
			}
			set
			{
				if ((this._Failure != value))
				{
					this._Failure = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PerSuccess", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string PerSuccess
		{
			get
			{
				return this._PerSuccess;
			}
			set
			{
				if ((this._PerSuccess != value))
				{
					this._PerSuccess = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PerFailure", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string PerFailure
		{
			get
			{
				return this._PerFailure;
			}
			set
			{
				if ((this._PerFailure != value))
				{
					this._PerFailure = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
